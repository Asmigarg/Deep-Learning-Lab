# -*- coding: utf-8 -*-
"""Experiment 3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1S31fhkYS-ZGA4kb2kh929U83f-6WP81_
"""

import tensorflow as tf
from tensorflow.keras import layers, models
from tensorflow.keras.applications import VGG16
from tensorflow.keras.datasets import mnist
from tensorflow.keras.utils import to_categorical

(train_images, train_labels), (test_images, test_labels) = mnist.load_data()

train_images = train_images.reshape((60000, 28, 28, 1)).astype('float32') / 255
test_images = test_images.reshape((10000, 28, 28, 1)).astype('float32') / 255

train_images_resized = tf.image.resize(train_images, (32, 32))
test_images_resized = tf.image.resize(test_images, (32, 32))

train_images_rgb = tf.image.grayscale_to_rgb(train_images_resized)
test_images_rgb = tf.image.grayscale_to_rgb(test_images_resized)

train_labels = to_categorical(train_labels, 10)
test_labels = to_categorical(test_labels, 10)

base_model= VGG16(weights='imagenet', include_top=False, input_shape=(32, 32, 3))

base_model.trainable= False

model = models.Sequential([
    base_model,
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

history = model.fit(train_images_rgb, train_labels, epochs=5, batch_size=64, validation_split=0.2)

test_loss, test_acc= model.evaluate(test_images_rgb, test_labels)
print(f'TestAccuracy: {test_acc}')